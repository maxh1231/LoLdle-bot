services:
  app:
    build: ./server/
    command: [ "sh", "-c", "npm run build && npm run start" ]
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
        restart: true
    develop:
      watch:
        - action: sync+restart
          path: ./server
          target: /app
          ignore:
            - build/**

  mysql:
    image: mysql:8.4
    container_name: my-mysql
    env_file:
      - .env
    environment:
      MYSQL_NAME: ${MYSQL_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./server/db/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./server/db/schema.sql:/schema.sql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_ROOT_PASSWORD}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  cronjob:
    build: ./cronjob
    env_file:
      - .env
    environment:
      MYSQL_NAME: ${MYSQL_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    develop:
      watch:
        - action: rebuild
          path: ./cronjob
          target: /app
          ignore:
            - cronfile
            - cronjob.log
volumes:
  db-data:
